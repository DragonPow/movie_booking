// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.2
// source: movie/v1/movie.proto

package moviepb

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// MovieStatus represents the current status of a movie
type MovieStatus int32

const (
	// Default value, should not be used
	MovieStatus_MOVIE_STATUS_UNSPECIFIED MovieStatus = 0
	// Movie is currently showing in theaters
	MovieStatus_MOVIE_STATUS_NOW_SHOWING MovieStatus = 1
	// Movie will be released in the future
	MovieStatus_MOVIE_STATUS_UPCOMING MovieStatus = 2
)

// Enum value maps for MovieStatus.
var (
	MovieStatus_name = map[int32]string{
		0: "MOVIE_STATUS_UNSPECIFIED",
		1: "MOVIE_STATUS_NOW_SHOWING",
		2: "MOVIE_STATUS_UPCOMING",
	}
	MovieStatus_value = map[string]int32{
		"MOVIE_STATUS_UNSPECIFIED": 0,
		"MOVIE_STATUS_NOW_SHOWING": 1,
		"MOVIE_STATUS_UPCOMING":    2,
	}
)

func (x MovieStatus) Enum() *MovieStatus {
	p := new(MovieStatus)
	*p = x
	return p
}

func (x MovieStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MovieStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_movie_v1_movie_proto_enumTypes[0].Descriptor()
}

func (MovieStatus) Type() protoreflect.EnumType {
	return &file_movie_v1_movie_proto_enumTypes[0]
}

func (x MovieStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MovieStatus.Descriptor instead.
func (MovieStatus) EnumDescriptor() ([]byte, []int) {
	return file_movie_v1_movie_proto_rawDescGZIP(), []int{0}
}

// ShowStatus represents the current status of a show
type ShowStatus int32

const (
	// Default value, should not be used
	ShowStatus_SHOW_STATUS_UNSPECIFIED ShowStatus = 0
	// Show is scheduled and seats can be booked
	ShowStatus_SHOW_STATUS_AVAILABLE ShowStatus = 1
	// Show is fully booked
	ShowStatus_SHOW_STATUS_FULL ShowStatus = 2
	// Show has started or ended
	ShowStatus_SHOW_STATUS_FINISHED ShowStatus = 3
	// Show was cancelled
	ShowStatus_SHOW_STATUS_CANCELLED ShowStatus = 4
)

// Enum value maps for ShowStatus.
var (
	ShowStatus_name = map[int32]string{
		0: "SHOW_STATUS_UNSPECIFIED",
		1: "SHOW_STATUS_AVAILABLE",
		2: "SHOW_STATUS_FULL",
		3: "SHOW_STATUS_FINISHED",
		4: "SHOW_STATUS_CANCELLED",
	}
	ShowStatus_value = map[string]int32{
		"SHOW_STATUS_UNSPECIFIED": 0,
		"SHOW_STATUS_AVAILABLE":   1,
		"SHOW_STATUS_FULL":        2,
		"SHOW_STATUS_FINISHED":    3,
		"SHOW_STATUS_CANCELLED":   4,
	}
)

func (x ShowStatus) Enum() *ShowStatus {
	p := new(ShowStatus)
	*p = x
	return p
}

func (x ShowStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ShowStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_movie_v1_movie_proto_enumTypes[1].Descriptor()
}

func (ShowStatus) Type() protoreflect.EnumType {
	return &file_movie_v1_movie_proto_enumTypes[1]
}

func (x ShowStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ShowStatus.Descriptor instead.
func (ShowStatus) EnumDescriptor() ([]byte, []int) {
	return file_movie_v1_movie_proto_rawDescGZIP(), []int{1}
}

// SeatStatus represents the current status of a seat
type SeatStatus int32

const (
	// Default value, should not be used
	SeatStatus_SEAT_STATUS_UNSPECIFIED SeatStatus = 0
	// Seat is available for booking
	SeatStatus_SEAT_STATUS_AVAILABLE SeatStatus = 1
	// Seat is temporarily held
	SeatStatus_SEAT_STATUS_HELD SeatStatus = 2
	// Seat has been booked
	SeatStatus_SEAT_STATUS_BOOKED SeatStatus = 3
	// Seat is not available (maintenance, blocked)
	SeatStatus_SEAT_STATUS_UNAVAILABLE SeatStatus = 4
)

// Enum value maps for SeatStatus.
var (
	SeatStatus_name = map[int32]string{
		0: "SEAT_STATUS_UNSPECIFIED",
		1: "SEAT_STATUS_AVAILABLE",
		2: "SEAT_STATUS_HELD",
		3: "SEAT_STATUS_BOOKED",
		4: "SEAT_STATUS_UNAVAILABLE",
	}
	SeatStatus_value = map[string]int32{
		"SEAT_STATUS_UNSPECIFIED": 0,
		"SEAT_STATUS_AVAILABLE":   1,
		"SEAT_STATUS_HELD":        2,
		"SEAT_STATUS_BOOKED":      3,
		"SEAT_STATUS_UNAVAILABLE": 4,
	}
)

func (x SeatStatus) Enum() *SeatStatus {
	p := new(SeatStatus)
	*p = x
	return p
}

func (x SeatStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SeatStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_movie_v1_movie_proto_enumTypes[2].Descriptor()
}

func (SeatStatus) Type() protoreflect.EnumType {
	return &file_movie_v1_movie_proto_enumTypes[2]
}

func (x SeatStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SeatStatus.Descriptor instead.
func (SeatStatus) EnumDescriptor() ([]byte, []int) {
	return file_movie_v1_movie_proto_rawDescGZIP(), []int{2}
}

// Movie represents a movie entity with all its details
type Movie struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Unique identifier for the movie
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Title of the movie
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	// Detailed description/synopsis
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// Movie genre (e.g., Action, Comedy, Drama)
	Genre string `protobuf:"bytes,4,opt,name=genre,proto3" json:"genre,omitempty"`
	// Duration in minutes
	Duration int32 `protobuf:"varint,5,opt,name=duration,proto3" json:"duration,omitempty"`
	// Release date in ISO 8601 format (YYYY-MM-DD)
	ReleaseDate string `protobuf:"bytes,6,opt,name=release_date,json=releaseDate,proto3" json:"release_date,omitempty"`
	// List of all shows for this movie
	Shows []*Show `protobuf:"bytes,7,rep,name=shows,proto3" json:"shows,omitempty"`
	// Language of the movie
	Language string `protobuf:"bytes,8,opt,name=language,proto3" json:"language,omitempty"`
	// Age rating (e.g., G, PG, PG-13, R)
	AgeRating string `protobuf:"bytes,9,opt,name=age_rating,json=ageRating,proto3" json:"age_rating,omitempty"`
	// URL to movie poster image
	PosterUrl string `protobuf:"bytes,10,opt,name=poster_url,json=posterUrl,proto3" json:"poster_url,omitempty"`
	// URL to movie trailer video
	TrailerUrl string `protobuf:"bytes,11,opt,name=trailer_url,json=trailerUrl,proto3" json:"trailer_url,omitempty"`
	// Current status of the movie
	Status        MovieStatus `protobuf:"varint,12,opt,name=status,proto3,enum=movie.v1.MovieStatus" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Movie) Reset() {
	*x = Movie{}
	mi := &file_movie_v1_movie_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Movie) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Movie) ProtoMessage() {}

func (x *Movie) ProtoReflect() protoreflect.Message {
	mi := &file_movie_v1_movie_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Movie.ProtoReflect.Descriptor instead.
func (*Movie) Descriptor() ([]byte, []int) {
	return file_movie_v1_movie_proto_rawDescGZIP(), []int{0}
}

func (x *Movie) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Movie) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Movie) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Movie) GetGenre() string {
	if x != nil {
		return x.Genre
	}
	return ""
}

func (x *Movie) GetDuration() int32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *Movie) GetReleaseDate() string {
	if x != nil {
		return x.ReleaseDate
	}
	return ""
}

func (x *Movie) GetShows() []*Show {
	if x != nil {
		return x.Shows
	}
	return nil
}

func (x *Movie) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *Movie) GetAgeRating() string {
	if x != nil {
		return x.AgeRating
	}
	return ""
}

func (x *Movie) GetPosterUrl() string {
	if x != nil {
		return x.PosterUrl
	}
	return ""
}

func (x *Movie) GetTrailerUrl() string {
	if x != nil {
		return x.TrailerUrl
	}
	return ""
}

func (x *Movie) GetStatus() MovieStatus {
	if x != nil {
		return x.Status
	}
	return MovieStatus_MOVIE_STATUS_UNSPECIFIED
}

// Show represents a specific screening of a movie in a theater room
type Show struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Unique identifier for the show
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Reference to the movie being shown
	MovieId string `protobuf:"bytes,2,opt,name=movie_id,json=movieId,proto3" json:"movie_id,omitempty"`
	// Reference to the theater room
	RoomId string `protobuf:"bytes,3,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	// Show time in ISO 8601 format (YYYY-MM-DDTHH:mm:ssZ)
	StartTime string `protobuf:"bytes,4,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	// Show end time calculated based on movie duration
	EndTime string `protobuf:"bytes,5,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	// Base price for the show
	BasePrice float64 `protobuf:"fixed64,6,opt,name=base_price,json=basePrice,proto3" json:"base_price,omitempty"`
	// Available seats in the room for this show
	AvailableSeats []*Seat `protobuf:"bytes,7,rep,name=available_seats,json=availableSeats,proto3" json:"available_seats,omitempty"`
	// Current status of the show
	Status        ShowStatus `protobuf:"varint,8,opt,name=status,proto3,enum=movie.v1.ShowStatus" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Show) Reset() {
	*x = Show{}
	mi := &file_movie_v1_movie_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Show) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Show) ProtoMessage() {}

func (x *Show) ProtoReflect() protoreflect.Message {
	mi := &file_movie_v1_movie_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Show.ProtoReflect.Descriptor instead.
func (*Show) Descriptor() ([]byte, []int) {
	return file_movie_v1_movie_proto_rawDescGZIP(), []int{1}
}

func (x *Show) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Show) GetMovieId() string {
	if x != nil {
		return x.MovieId
	}
	return ""
}

func (x *Show) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *Show) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *Show) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *Show) GetBasePrice() float64 {
	if x != nil {
		return x.BasePrice
	}
	return 0
}

func (x *Show) GetAvailableSeats() []*Seat {
	if x != nil {
		return x.AvailableSeats
	}
	return nil
}

func (x *Show) GetStatus() ShowStatus {
	if x != nil {
		return x.Status
	}
	return ShowStatus_SHOW_STATUS_UNSPECIFIED
}

// Seat represents a seat in a theater room
type Seat struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Unique identifier for the seat
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Row label (e.g., A, B, C)
	Row string `protobuf:"bytes,2,opt,name=row,proto3" json:"row,omitempty"`
	// Number in the row (e.g., 1, 2, 3)
	Number int32 `protobuf:"varint,3,opt,name=number,proto3" json:"number,omitempty"`
	// Type of seat (e.g., Standard, VIP, Couple)
	Type string `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	// Current status of the seat
	Status        SeatStatus `protobuf:"varint,5,opt,name=status,proto3,enum=movie.v1.SeatStatus" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Seat) Reset() {
	*x = Seat{}
	mi := &file_movie_v1_movie_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Seat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Seat) ProtoMessage() {}

func (x *Seat) ProtoReflect() protoreflect.Message {
	mi := &file_movie_v1_movie_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Seat.ProtoReflect.Descriptor instead.
func (*Seat) Descriptor() ([]byte, []int) {
	return file_movie_v1_movie_proto_rawDescGZIP(), []int{2}
}

func (x *Seat) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Seat) GetRow() string {
	if x != nil {
		return x.Row
	}
	return ""
}

func (x *Seat) GetNumber() int32 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *Seat) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Seat) GetStatus() SeatStatus {
	if x != nil {
		return x.Status
	}
	return SeatStatus_SEAT_STATUS_UNSPECIFIED
}

// DateRange represents a time period with start and end dates
type DateRange struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Start date in ISO 8601 format (YYYY-MM-DD)
	StartDate string `protobuf:"bytes,1,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	// End date in ISO 8601 format (YYYY-MM-DD)
	EndDate       string `protobuf:"bytes,2,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DateRange) Reset() {
	*x = DateRange{}
	mi := &file_movie_v1_movie_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DateRange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DateRange) ProtoMessage() {}

func (x *DateRange) ProtoReflect() protoreflect.Message {
	mi := &file_movie_v1_movie_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DateRange.ProtoReflect.Descriptor instead.
func (*DateRange) Descriptor() ([]byte, []int) {
	return file_movie_v1_movie_proto_rawDescGZIP(), []int{3}
}

func (x *DateRange) GetStartDate() string {
	if x != nil {
		return x.StartDate
	}
	return ""
}

func (x *DateRange) GetEndDate() string {
	if x != nil {
		return x.EndDate
	}
	return ""
}

// Request message for ListMovies
type ListMoviesRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Number of movies to return per page
	PageSize int32 `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Page number, starting from 1
	PageNumber int32 `protobuf:"varint,2,opt,name=page_number,json=pageNumber,proto3" json:"page_number,omitempty"`
	// Filter by genre
	Genre *string `protobuf:"bytes,3,opt,name=genre,proto3,oneof" json:"genre,omitempty"`
	// Filter by location/theater
	Location *string `protobuf:"bytes,4,opt,name=location,proto3,oneof" json:"location,omitempty"`
	// Filter by date range
	DateRange *DateRange `protobuf:"bytes,5,opt,name=date_range,json=dateRange,proto3,oneof" json:"date_range,omitempty"`
	// Filter by movie status
	Status        *MovieStatus `protobuf:"varint,6,opt,name=status,proto3,enum=movie.v1.MovieStatus,oneof" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListMoviesRequest) Reset() {
	*x = ListMoviesRequest{}
	mi := &file_movie_v1_movie_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListMoviesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMoviesRequest) ProtoMessage() {}

func (x *ListMoviesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_movie_v1_movie_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMoviesRequest.ProtoReflect.Descriptor instead.
func (*ListMoviesRequest) Descriptor() ([]byte, []int) {
	return file_movie_v1_movie_proto_rawDescGZIP(), []int{4}
}

func (x *ListMoviesRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListMoviesRequest) GetPageNumber() int32 {
	if x != nil {
		return x.PageNumber
	}
	return 0
}

func (x *ListMoviesRequest) GetGenre() string {
	if x != nil && x.Genre != nil {
		return *x.Genre
	}
	return ""
}

func (x *ListMoviesRequest) GetLocation() string {
	if x != nil && x.Location != nil {
		return *x.Location
	}
	return ""
}

func (x *ListMoviesRequest) GetDateRange() *DateRange {
	if x != nil {
		return x.DateRange
	}
	return nil
}

func (x *ListMoviesRequest) GetStatus() MovieStatus {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return MovieStatus_MOVIE_STATUS_UNSPECIFIED
}

// Response message for ListMovies
type ListMoviesResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of movies matching the request
	Movies []*Movie `protobuf:"bytes,1,rep,name=movies,proto3" json:"movies,omitempty"`
	// Total number of movies matching the filter criteria
	TotalCount    int32 `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListMoviesResponse) Reset() {
	*x = ListMoviesResponse{}
	mi := &file_movie_v1_movie_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListMoviesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMoviesResponse) ProtoMessage() {}

func (x *ListMoviesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_movie_v1_movie_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMoviesResponse.ProtoReflect.Descriptor instead.
func (*ListMoviesResponse) Descriptor() ([]byte, []int) {
	return file_movie_v1_movie_proto_rawDescGZIP(), []int{5}
}

func (x *ListMoviesResponse) GetMovies() []*Movie {
	if x != nil {
		return x.Movies
	}
	return nil
}

func (x *ListMoviesResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

// Request message for GetMovie
type GetMovieRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the movie to retrieve
	MovieId       string `protobuf:"bytes,1,opt,name=movie_id,json=movieId,proto3" json:"movie_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMovieRequest) Reset() {
	*x = GetMovieRequest{}
	mi := &file_movie_v1_movie_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMovieRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMovieRequest) ProtoMessage() {}

func (x *GetMovieRequest) ProtoReflect() protoreflect.Message {
	mi := &file_movie_v1_movie_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMovieRequest.ProtoReflect.Descriptor instead.
func (*GetMovieRequest) Descriptor() ([]byte, []int) {
	return file_movie_v1_movie_proto_rawDescGZIP(), []int{6}
}

func (x *GetMovieRequest) GetMovieId() string {
	if x != nil {
		return x.MovieId
	}
	return ""
}

// Response message for GetMovie
type GetMovieResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The requested movie
	Movie         *Movie `protobuf:"bytes,1,opt,name=movie,proto3" json:"movie,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMovieResponse) Reset() {
	*x = GetMovieResponse{}
	mi := &file_movie_v1_movie_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMovieResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMovieResponse) ProtoMessage() {}

func (x *GetMovieResponse) ProtoReflect() protoreflect.Message {
	mi := &file_movie_v1_movie_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMovieResponse.ProtoReflect.Descriptor instead.
func (*GetMovieResponse) Descriptor() ([]byte, []int) {
	return file_movie_v1_movie_proto_rawDescGZIP(), []int{7}
}

func (x *GetMovieResponse) GetMovie() *Movie {
	if x != nil {
		return x.Movie
	}
	return nil
}

// Request message for CreateMovie
type CreateMovieRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Title of the new movie
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// Movie description/synopsis
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	// Movie genre
	Genre string `protobuf:"bytes,3,opt,name=genre,proto3" json:"genre,omitempty"`
	// Duration in minutes
	Duration int32 `protobuf:"varint,4,opt,name=duration,proto3" json:"duration,omitempty"`
	// Release date in ISO 8601 format (YYYY-MM-DD)
	ReleaseDate string `protobuf:"bytes,5,opt,name=release_date,json=releaseDate,proto3" json:"release_date,omitempty"`
	// Movie language
	Language string `protobuf:"bytes,6,opt,name=language,proto3" json:"language,omitempty"`
	// Age rating
	AgeRating string `protobuf:"bytes,7,opt,name=age_rating,json=ageRating,proto3" json:"age_rating,omitempty"`
	// URL to movie poster
	PosterUrl string `protobuf:"bytes,8,opt,name=poster_url,json=posterUrl,proto3" json:"poster_url,omitempty"`
	// URL to movie trailer
	TrailerUrl string `protobuf:"bytes,9,opt,name=trailer_url,json=trailerUrl,proto3" json:"trailer_url,omitempty"`
	// Current status of the movie
	Status        MovieStatus `protobuf:"varint,10,opt,name=status,proto3,enum=movie.v1.MovieStatus" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateMovieRequest) Reset() {
	*x = CreateMovieRequest{}
	mi := &file_movie_v1_movie_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateMovieRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMovieRequest) ProtoMessage() {}

func (x *CreateMovieRequest) ProtoReflect() protoreflect.Message {
	mi := &file_movie_v1_movie_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMovieRequest.ProtoReflect.Descriptor instead.
func (*CreateMovieRequest) Descriptor() ([]byte, []int) {
	return file_movie_v1_movie_proto_rawDescGZIP(), []int{8}
}

func (x *CreateMovieRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreateMovieRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateMovieRequest) GetGenre() string {
	if x != nil {
		return x.Genre
	}
	return ""
}

func (x *CreateMovieRequest) GetDuration() int32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *CreateMovieRequest) GetReleaseDate() string {
	if x != nil {
		return x.ReleaseDate
	}
	return ""
}

func (x *CreateMovieRequest) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *CreateMovieRequest) GetAgeRating() string {
	if x != nil {
		return x.AgeRating
	}
	return ""
}

func (x *CreateMovieRequest) GetPosterUrl() string {
	if x != nil {
		return x.PosterUrl
	}
	return ""
}

func (x *CreateMovieRequest) GetTrailerUrl() string {
	if x != nil {
		return x.TrailerUrl
	}
	return ""
}

func (x *CreateMovieRequest) GetStatus() MovieStatus {
	if x != nil {
		return x.Status
	}
	return MovieStatus_MOVIE_STATUS_UNSPECIFIED
}

// Response message for CreateMovie
type CreateMovieResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The created movie
	Movie         *Movie `protobuf:"bytes,1,opt,name=movie,proto3" json:"movie,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateMovieResponse) Reset() {
	*x = CreateMovieResponse{}
	mi := &file_movie_v1_movie_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateMovieResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMovieResponse) ProtoMessage() {}

func (x *CreateMovieResponse) ProtoReflect() protoreflect.Message {
	mi := &file_movie_v1_movie_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMovieResponse.ProtoReflect.Descriptor instead.
func (*CreateMovieResponse) Descriptor() ([]byte, []int) {
	return file_movie_v1_movie_proto_rawDescGZIP(), []int{9}
}

func (x *CreateMovieResponse) GetMovie() *Movie {
	if x != nil {
		return x.Movie
	}
	return nil
}

// Request message for ListShows
type ListShowsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the movie to list shows for
	MovieId string `protobuf:"bytes,1,opt,name=movie_id,json=movieId,proto3" json:"movie_id,omitempty"`
	// Filter shows by date range
	DateRange *DateRange `protobuf:"bytes,2,opt,name=date_range,json=dateRange,proto3,oneof" json:"date_range,omitempty"`
	// Filter by theater/location
	Location *string `protobuf:"bytes,3,opt,name=location,proto3,oneof" json:"location,omitempty"`
	// Filter by show status
	Status        *ShowStatus `protobuf:"varint,4,opt,name=status,proto3,enum=movie.v1.ShowStatus,oneof" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListShowsRequest) Reset() {
	*x = ListShowsRequest{}
	mi := &file_movie_v1_movie_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListShowsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListShowsRequest) ProtoMessage() {}

func (x *ListShowsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_movie_v1_movie_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListShowsRequest.ProtoReflect.Descriptor instead.
func (*ListShowsRequest) Descriptor() ([]byte, []int) {
	return file_movie_v1_movie_proto_rawDescGZIP(), []int{10}
}

func (x *ListShowsRequest) GetMovieId() string {
	if x != nil {
		return x.MovieId
	}
	return ""
}

func (x *ListShowsRequest) GetDateRange() *DateRange {
	if x != nil {
		return x.DateRange
	}
	return nil
}

func (x *ListShowsRequest) GetLocation() string {
	if x != nil && x.Location != nil {
		return *x.Location
	}
	return ""
}

func (x *ListShowsRequest) GetStatus() ShowStatus {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return ShowStatus_SHOW_STATUS_UNSPECIFIED
}

// Response message for ListShows
type ListShowsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of shows matching the request
	Shows []*Show `protobuf:"bytes,1,rep,name=shows,proto3" json:"shows,omitempty"`
	// Total number of movies matching the filter criteria
	TotalCount    int32 `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListShowsResponse) Reset() {
	*x = ListShowsResponse{}
	mi := &file_movie_v1_movie_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListShowsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListShowsResponse) ProtoMessage() {}

func (x *ListShowsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_movie_v1_movie_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListShowsResponse.ProtoReflect.Descriptor instead.
func (*ListShowsResponse) Descriptor() ([]byte, []int) {
	return file_movie_v1_movie_proto_rawDescGZIP(), []int{11}
}

func (x *ListShowsResponse) GetShows() []*Show {
	if x != nil {
		return x.Shows
	}
	return nil
}

func (x *ListShowsResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

// Request message for CreateShow
type CreateShowRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the movie to create show for
	MovieId string `protobuf:"bytes,1,opt,name=movie_id,json=movieId,proto3" json:"movie_id,omitempty"`
	// ID of the theater room
	RoomId string `protobuf:"bytes,2,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	// Show start time in ISO 8601 format
	StartTime string `protobuf:"bytes,3,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	// Base ticket price
	BasePrice     float64 `protobuf:"fixed64,4,opt,name=base_price,json=basePrice,proto3" json:"base_price,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateShowRequest) Reset() {
	*x = CreateShowRequest{}
	mi := &file_movie_v1_movie_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateShowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateShowRequest) ProtoMessage() {}

func (x *CreateShowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_movie_v1_movie_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateShowRequest.ProtoReflect.Descriptor instead.
func (*CreateShowRequest) Descriptor() ([]byte, []int) {
	return file_movie_v1_movie_proto_rawDescGZIP(), []int{12}
}

func (x *CreateShowRequest) GetMovieId() string {
	if x != nil {
		return x.MovieId
	}
	return ""
}

func (x *CreateShowRequest) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *CreateShowRequest) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *CreateShowRequest) GetBasePrice() float64 {
	if x != nil {
		return x.BasePrice
	}
	return 0
}

// Response message for CreateShow
type CreateShowResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The created show
	Show          *Show `protobuf:"bytes,1,opt,name=show,proto3" json:"show,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateShowResponse) Reset() {
	*x = CreateShowResponse{}
	mi := &file_movie_v1_movie_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateShowResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateShowResponse) ProtoMessage() {}

func (x *CreateShowResponse) ProtoReflect() protoreflect.Message {
	mi := &file_movie_v1_movie_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateShowResponse.ProtoReflect.Descriptor instead.
func (*CreateShowResponse) Descriptor() ([]byte, []int) {
	return file_movie_v1_movie_proto_rawDescGZIP(), []int{13}
}

func (x *CreateShowResponse) GetShow() *Show {
	if x != nil {
		return x.Show
	}
	return nil
}

var File_movie_v1_movie_proto protoreflect.FileDescriptor

const file_movie_v1_movie_proto_rawDesc = "" +
	"\n" +
	"\x14movie/v1/movie.proto\x12\bmovie.v1\x1a\x1cgoogle/api/annotations.proto\"\xf4\x02\n" +
	"\x05Movie\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12\x14\n" +
	"\x05genre\x18\x04 \x01(\tR\x05genre\x12\x1a\n" +
	"\bduration\x18\x05 \x01(\x05R\bduration\x12!\n" +
	"\frelease_date\x18\x06 \x01(\tR\vreleaseDate\x12$\n" +
	"\x05shows\x18\a \x03(\v2\x0e.movie.v1.ShowR\x05shows\x12\x1a\n" +
	"\blanguage\x18\b \x01(\tR\blanguage\x12\x1d\n" +
	"\n" +
	"age_rating\x18\t \x01(\tR\tageRating\x12\x1d\n" +
	"\n" +
	"poster_url\x18\n" +
	" \x01(\tR\tposterUrl\x12\x1f\n" +
	"\vtrailer_url\x18\v \x01(\tR\n" +
	"trailerUrl\x12-\n" +
	"\x06status\x18\f \x01(\x0e2\x15.movie.v1.MovieStatusR\x06status\"\x8a\x02\n" +
	"\x04Show\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x19\n" +
	"\bmovie_id\x18\x02 \x01(\tR\amovieId\x12\x17\n" +
	"\aroom_id\x18\x03 \x01(\tR\x06roomId\x12\x1d\n" +
	"\n" +
	"start_time\x18\x04 \x01(\tR\tstartTime\x12\x19\n" +
	"\bend_time\x18\x05 \x01(\tR\aendTime\x12\x1d\n" +
	"\n" +
	"base_price\x18\x06 \x01(\x01R\tbasePrice\x127\n" +
	"\x0favailable_seats\x18\a \x03(\v2\x0e.movie.v1.SeatR\x0eavailableSeats\x12,\n" +
	"\x06status\x18\b \x01(\x0e2\x14.movie.v1.ShowStatusR\x06status\"\x82\x01\n" +
	"\x04Seat\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x10\n" +
	"\x03row\x18\x02 \x01(\tR\x03row\x12\x16\n" +
	"\x06number\x18\x03 \x01(\x05R\x06number\x12\x12\n" +
	"\x04type\x18\x04 \x01(\tR\x04type\x12,\n" +
	"\x06status\x18\x05 \x01(\x0e2\x14.movie.v1.SeatStatusR\x06status\"E\n" +
	"\tDateRange\x12\x1d\n" +
	"\n" +
	"start_date\x18\x01 \x01(\tR\tstartDate\x12\x19\n" +
	"\bend_date\x18\x02 \x01(\tR\aendDate\"\xab\x02\n" +
	"\x11ListMoviesRequest\x12\x1b\n" +
	"\tpage_size\x18\x01 \x01(\x05R\bpageSize\x12\x1f\n" +
	"\vpage_number\x18\x02 \x01(\x05R\n" +
	"pageNumber\x12\x19\n" +
	"\x05genre\x18\x03 \x01(\tH\x00R\x05genre\x88\x01\x01\x12\x1f\n" +
	"\blocation\x18\x04 \x01(\tH\x01R\blocation\x88\x01\x01\x127\n" +
	"\n" +
	"date_range\x18\x05 \x01(\v2\x13.movie.v1.DateRangeH\x02R\tdateRange\x88\x01\x01\x122\n" +
	"\x06status\x18\x06 \x01(\x0e2\x15.movie.v1.MovieStatusH\x03R\x06status\x88\x01\x01B\b\n" +
	"\x06_genreB\v\n" +
	"\t_locationB\r\n" +
	"\v_date_rangeB\t\n" +
	"\a_status\"^\n" +
	"\x12ListMoviesResponse\x12'\n" +
	"\x06movies\x18\x01 \x03(\v2\x0f.movie.v1.MovieR\x06movies\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount\",\n" +
	"\x0fGetMovieRequest\x12\x19\n" +
	"\bmovie_id\x18\x01 \x01(\tR\amovieId\"9\n" +
	"\x10GetMovieResponse\x12%\n" +
	"\x05movie\x18\x01 \x01(\v2\x0f.movie.v1.MovieR\x05movie\"\xcb\x02\n" +
	"\x12CreateMovieRequest\x12\x14\n" +
	"\x05title\x18\x01 \x01(\tR\x05title\x12 \n" +
	"\vdescription\x18\x02 \x01(\tR\vdescription\x12\x14\n" +
	"\x05genre\x18\x03 \x01(\tR\x05genre\x12\x1a\n" +
	"\bduration\x18\x04 \x01(\x05R\bduration\x12!\n" +
	"\frelease_date\x18\x05 \x01(\tR\vreleaseDate\x12\x1a\n" +
	"\blanguage\x18\x06 \x01(\tR\blanguage\x12\x1d\n" +
	"\n" +
	"age_rating\x18\a \x01(\tR\tageRating\x12\x1d\n" +
	"\n" +
	"poster_url\x18\b \x01(\tR\tposterUrl\x12\x1f\n" +
	"\vtrailer_url\x18\t \x01(\tR\n" +
	"trailerUrl\x12-\n" +
	"\x06status\x18\n" +
	" \x01(\x0e2\x15.movie.v1.MovieStatusR\x06status\"<\n" +
	"\x13CreateMovieResponse\x12%\n" +
	"\x05movie\x18\x01 \x01(\v2\x0f.movie.v1.MovieR\x05movie\"\xe1\x01\n" +
	"\x10ListShowsRequest\x12\x19\n" +
	"\bmovie_id\x18\x01 \x01(\tR\amovieId\x127\n" +
	"\n" +
	"date_range\x18\x02 \x01(\v2\x13.movie.v1.DateRangeH\x00R\tdateRange\x88\x01\x01\x12\x1f\n" +
	"\blocation\x18\x03 \x01(\tH\x01R\blocation\x88\x01\x01\x121\n" +
	"\x06status\x18\x04 \x01(\x0e2\x14.movie.v1.ShowStatusH\x02R\x06status\x88\x01\x01B\r\n" +
	"\v_date_rangeB\v\n" +
	"\t_locationB\t\n" +
	"\a_status\"Z\n" +
	"\x11ListShowsResponse\x12$\n" +
	"\x05shows\x18\x01 \x03(\v2\x0e.movie.v1.ShowR\x05shows\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount\"\x85\x01\n" +
	"\x11CreateShowRequest\x12\x19\n" +
	"\bmovie_id\x18\x01 \x01(\tR\amovieId\x12\x17\n" +
	"\aroom_id\x18\x02 \x01(\tR\x06roomId\x12\x1d\n" +
	"\n" +
	"start_time\x18\x03 \x01(\tR\tstartTime\x12\x1d\n" +
	"\n" +
	"base_price\x18\x04 \x01(\x01R\tbasePrice\"8\n" +
	"\x12CreateShowResponse\x12\"\n" +
	"\x04show\x18\x01 \x01(\v2\x0e.movie.v1.ShowR\x04show*d\n" +
	"\vMovieStatus\x12\x1c\n" +
	"\x18MOVIE_STATUS_UNSPECIFIED\x10\x00\x12\x1c\n" +
	"\x18MOVIE_STATUS_NOW_SHOWING\x10\x01\x12\x19\n" +
	"\x15MOVIE_STATUS_UPCOMING\x10\x02*\x8f\x01\n" +
	"\n" +
	"ShowStatus\x12\x1b\n" +
	"\x17SHOW_STATUS_UNSPECIFIED\x10\x00\x12\x19\n" +
	"\x15SHOW_STATUS_AVAILABLE\x10\x01\x12\x14\n" +
	"\x10SHOW_STATUS_FULL\x10\x02\x12\x18\n" +
	"\x14SHOW_STATUS_FINISHED\x10\x03\x12\x19\n" +
	"\x15SHOW_STATUS_CANCELLED\x10\x04*\x8f\x01\n" +
	"\n" +
	"SeatStatus\x12\x1b\n" +
	"\x17SEAT_STATUS_UNSPECIFIED\x10\x00\x12\x19\n" +
	"\x15SEAT_STATUS_AVAILABLE\x10\x01\x12\x14\n" +
	"\x10SEAT_STATUS_HELD\x10\x02\x12\x16\n" +
	"\x12SEAT_STATUS_BOOKED\x10\x03\x12\x1b\n" +
	"\x17SEAT_STATUS_UNAVAILABLE\x10\x042\x8c\x04\n" +
	"\fMovieService\x12[\n" +
	"\n" +
	"ListMovies\x12\x1b.movie.v1.ListMoviesRequest\x1a\x1c.movie.v1.ListMoviesResponse\"\x12\x82\xd3\xe4\x93\x02\f\x12\n" +
	"/v1/movies\x12`\n" +
	"\bGetMovie\x12\x19.movie.v1.GetMovieRequest\x1a\x1a.movie.v1.GetMovieResponse\"\x1d\x82\xd3\xe4\x93\x02\x17\x12\x15/v1/movies/{movie_id}\x12a\n" +
	"\vCreateMovie\x12\x1c.movie.v1.CreateMovieRequest\x1a\x1d.movie.v1.CreateMovieResponse\"\x15\x82\xd3\xe4\x93\x02\x0f\"\n" +
	"/v1/movies:\x01*\x12i\n" +
	"\tListShows\x12\x1a.movie.v1.ListShowsRequest\x1a\x1b.movie.v1.ListShowsResponse\"#\x82\xd3\xe4\x93\x02\x1d\x12\x1b/v1/movies/{movie_id}/shows\x12o\n" +
	"\n" +
	"CreateShow\x12\x1b.movie.v1.CreateShowRequest\x1a\x1c.movie.v1.CreateShowResponse\"&\x82\xd3\xe4\x93\x02 \"\x1b/v1/movies/{movie_id}/shows:\x01*B?Z=github.com/DragonPow/movie_booking/gen/proto/movie/v1;moviepbb\x06proto3"

var (
	file_movie_v1_movie_proto_rawDescOnce sync.Once
	file_movie_v1_movie_proto_rawDescData []byte
)

func file_movie_v1_movie_proto_rawDescGZIP() []byte {
	file_movie_v1_movie_proto_rawDescOnce.Do(func() {
		file_movie_v1_movie_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_movie_v1_movie_proto_rawDesc), len(file_movie_v1_movie_proto_rawDesc)))
	})
	return file_movie_v1_movie_proto_rawDescData
}

var file_movie_v1_movie_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_movie_v1_movie_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_movie_v1_movie_proto_goTypes = []any{
	(MovieStatus)(0),            // 0: movie.v1.MovieStatus
	(ShowStatus)(0),             // 1: movie.v1.ShowStatus
	(SeatStatus)(0),             // 2: movie.v1.SeatStatus
	(*Movie)(nil),               // 3: movie.v1.Movie
	(*Show)(nil),                // 4: movie.v1.Show
	(*Seat)(nil),                // 5: movie.v1.Seat
	(*DateRange)(nil),           // 6: movie.v1.DateRange
	(*ListMoviesRequest)(nil),   // 7: movie.v1.ListMoviesRequest
	(*ListMoviesResponse)(nil),  // 8: movie.v1.ListMoviesResponse
	(*GetMovieRequest)(nil),     // 9: movie.v1.GetMovieRequest
	(*GetMovieResponse)(nil),    // 10: movie.v1.GetMovieResponse
	(*CreateMovieRequest)(nil),  // 11: movie.v1.CreateMovieRequest
	(*CreateMovieResponse)(nil), // 12: movie.v1.CreateMovieResponse
	(*ListShowsRequest)(nil),    // 13: movie.v1.ListShowsRequest
	(*ListShowsResponse)(nil),   // 14: movie.v1.ListShowsResponse
	(*CreateShowRequest)(nil),   // 15: movie.v1.CreateShowRequest
	(*CreateShowResponse)(nil),  // 16: movie.v1.CreateShowResponse
}
var file_movie_v1_movie_proto_depIdxs = []int32{
	4,  // 0: movie.v1.Movie.shows:type_name -> movie.v1.Show
	0,  // 1: movie.v1.Movie.status:type_name -> movie.v1.MovieStatus
	5,  // 2: movie.v1.Show.available_seats:type_name -> movie.v1.Seat
	1,  // 3: movie.v1.Show.status:type_name -> movie.v1.ShowStatus
	2,  // 4: movie.v1.Seat.status:type_name -> movie.v1.SeatStatus
	6,  // 5: movie.v1.ListMoviesRequest.date_range:type_name -> movie.v1.DateRange
	0,  // 6: movie.v1.ListMoviesRequest.status:type_name -> movie.v1.MovieStatus
	3,  // 7: movie.v1.ListMoviesResponse.movies:type_name -> movie.v1.Movie
	3,  // 8: movie.v1.GetMovieResponse.movie:type_name -> movie.v1.Movie
	0,  // 9: movie.v1.CreateMovieRequest.status:type_name -> movie.v1.MovieStatus
	3,  // 10: movie.v1.CreateMovieResponse.movie:type_name -> movie.v1.Movie
	6,  // 11: movie.v1.ListShowsRequest.date_range:type_name -> movie.v1.DateRange
	1,  // 12: movie.v1.ListShowsRequest.status:type_name -> movie.v1.ShowStatus
	4,  // 13: movie.v1.ListShowsResponse.shows:type_name -> movie.v1.Show
	4,  // 14: movie.v1.CreateShowResponse.show:type_name -> movie.v1.Show
	7,  // 15: movie.v1.MovieService.ListMovies:input_type -> movie.v1.ListMoviesRequest
	9,  // 16: movie.v1.MovieService.GetMovie:input_type -> movie.v1.GetMovieRequest
	11, // 17: movie.v1.MovieService.CreateMovie:input_type -> movie.v1.CreateMovieRequest
	13, // 18: movie.v1.MovieService.ListShows:input_type -> movie.v1.ListShowsRequest
	15, // 19: movie.v1.MovieService.CreateShow:input_type -> movie.v1.CreateShowRequest
	8,  // 20: movie.v1.MovieService.ListMovies:output_type -> movie.v1.ListMoviesResponse
	10, // 21: movie.v1.MovieService.GetMovie:output_type -> movie.v1.GetMovieResponse
	12, // 22: movie.v1.MovieService.CreateMovie:output_type -> movie.v1.CreateMovieResponse
	14, // 23: movie.v1.MovieService.ListShows:output_type -> movie.v1.ListShowsResponse
	16, // 24: movie.v1.MovieService.CreateShow:output_type -> movie.v1.CreateShowResponse
	20, // [20:25] is the sub-list for method output_type
	15, // [15:20] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_movie_v1_movie_proto_init() }
func file_movie_v1_movie_proto_init() {
	if File_movie_v1_movie_proto != nil {
		return
	}
	file_movie_v1_movie_proto_msgTypes[4].OneofWrappers = []any{}
	file_movie_v1_movie_proto_msgTypes[10].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_movie_v1_movie_proto_rawDesc), len(file_movie_v1_movie_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_movie_v1_movie_proto_goTypes,
		DependencyIndexes: file_movie_v1_movie_proto_depIdxs,
		EnumInfos:         file_movie_v1_movie_proto_enumTypes,
		MessageInfos:      file_movie_v1_movie_proto_msgTypes,
	}.Build()
	File_movie_v1_movie_proto = out.File
	file_movie_v1_movie_proto_goTypes = nil
	file_movie_v1_movie_proto_depIdxs = nil
}
